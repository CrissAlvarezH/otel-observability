AWSTemplateFormatVersion: 2010-09-09

Resources:

  FrontendInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-03972092c42e8c0ca  # Amazon Linux 2 AMI 64-bit (x86)
      AvailabilityZone: us-east-1a
      InstanceType: t3.micro
      Tags:
        - Key: Name
          Value: otel-frontend
      KeyName: otel-observability
      SecurityGroups:
        - !Ref FrontendInstanceSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          echo ">> INSTALLING DOCKER"
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user
          docker --version
          echo ">> INSTALLING DOCKER"
          sudo yum install -y git

  FrontendInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: App
          Value: otel-frontend
        - Key: Name
          Value: otel-frontend-sg
      GroupDescription: "otel-frontend security group"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  FilesServiceInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-03972092c42e8c0ca  # Amazon Linux 2 AMI 64-bit (x86)
      AvailabilityZone: us-east-1a
      InstanceType: t3.micro
      KeyName: otel-observability
      Tags:
        - Key: Name
          Value: otel-files-service
      IamInstanceProfile: !Ref FilesServiceInstanceProfile
      SecurityGroups:
        - !Ref FilesServiceInstanceSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user
          docker --version
          sudo yum install -y git

  FilesServiceInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: App
          Value: otel-files-service
        - Key: Name
          Value: otel-files-service-sg
      GroupDescription: "otel-files-service security group"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  FilesServiceInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref FilesServiceInstanceRole

  FilesServiceInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:ListMultipartUploadParts
                  - s3:ListBucketMultipartUploads
                  - s3:PutObject
                  - s3:GetObject
                Resource:
                  - !Sub arn:aws:s3:::${Bucket}/*
                  - !Sub arn:aws:s3:::${Bucket}
        - PolicyName: DynamoDBAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                Resource:
                  - !GetAtt DynamoFilesTable.Arn
                  - !Join [ "/", [ !GetAtt DynamoFilesTable.Arn, "*" ] ]

  AuthServiceInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-03972092c42e8c0ca  # Amazon Linux 2 AMI 64-bit (x86)
      AvailabilityZone: us-east-1a
      InstanceType: t3.micro
      KeyName: otel-observability
      Tags:
        - Key: Name
          Value: otel-auth-service
      SecurityGroups:
        - !Ref AuthServiceInstanceSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker ec2-user
          docker --version
          sudo yum install -y git

  AuthServiceInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Tags:
        - Key: App
          Value: otel-auth-service
        - Key: Name
          Value: otel-auth-service-sg
      GroupDescription: "otel-auth-service security group"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  AuthServiceInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref AuthServiceInstanceRole

  AuthServiceInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DynamoDBAccessPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                Resource:
                  - !GetAtt DynamoAuthTable.Arn
                  - !Join [ "/", [ !GetAtt DynamoAuthTable.Arn, "*" ] ]

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: otel-files-service
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [PUT]
            AllowedOrigins: [!Sub 'http://${FrontendInstance.PublicIp}']
            ExposedHeaders: [ETag]

  DynamoAuthTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: otel-observability-auth
      AttributeDefinitions:
        - AttributeName: username
          AttributeType: S
      KeySchema:
        - AttributeName: username
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Name
          Value: otel-observability-auth

  DynamoFilesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: otel-observability-files
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: data_type
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH # Partition key
      GlobalSecondaryIndexes:
        - IndexName: creation_datetime-index
          KeySchema:
            # data_type is an artificial attribute to "hack" dynamodb 
            # because its required add a has key
            - AttributeName: data_type
              KeyType: HASH
            # id is a ULID what is a string of 26 characters that can be ordered
            - AttributeName: id 
              KeyType: RANGE
          Projection:
            ProjectionType: ALL # All attributes in table
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Name
          Value: otel-observability-files

Outputs:
  FrontendInstancePublicIp:
    Description: Public IP of the frontend instance
    Value: !GetAtt FrontendInstance.PublicIp

  FilesServiceInstancePublicIp:
    Description: Public IP of the files service instance
    Value: !GetAtt FilesServiceInstance.PublicIp

  AuthServiceInstancePublicIp:
    Description: Public IP of the auth service instance
    Value: !GetAtt AuthServiceInstance.PublicIp
